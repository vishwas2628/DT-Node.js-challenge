"use strict";

var Q = require("q");

var CLASSES = "not-responsive emoji";

var Settings = require.main.require("./src/settings");

var packageJSON = require("../package.json");

/*
 * This file exports a NodeBB Settings Object and a few meta-data of the project.
 *
 * See https://docs.nodebb.org/en/latest/plugins/settings.html for more details on the Settings Object.
 *
 * This file by default gets meta-replaced (thus @{...} gets resolved within the grunt-tasks).
 * It is not recommended to add any more files, rather it is recommended to add additional exports here if needed.
 */

var ENV = "distribution",
    DEV = ENV === "development";
var PLUGIN_ID = "emoji-extended";
var DEFAULT_SET_SETTINGS_ENTRY = { mapping: true, excludes: [] };

var defaultPluginSettings = { completion: { maxLines: 8, minChars: 0, prefix: "^|[^\\w\\)\\]\\}\\-+]", enabled: true } };
var defaultSetSettings = { active: ["emoji-one"], options: { "emoji-one": { mapping: true, excludes: [/* String */] } } };
var initDefer = Q.defer();

var pluginSettings = new Settings(PLUGIN_ID, packageJSON.version, defaultPluginSettings, null, DEV, false);
var setSettings = new Settings(PLUGIN_ID + "-sets", packageJSON.version, defaultSetSettings, resolveInit, DEV, false);

/*===================================================== Exports  =====================================================*/

exports = module.exports = pluginSettings;
exports.setSettings = setSettings;

exports.defaultSetSettingsEntry = DEFAULT_SET_SETTINGS_ENTRY;
exports.emojiClasses = CLASSES;
exports.name = "nodebb-plugin-emoji-extended";
exports.id = PLUGIN_ID;
exports.Id = "EmojiExtended";
exports.iD = "emojiExtended";
exports.ID = "EMOJI_EXTENDED";
exports.dev = DEV;
exports.env = ENV;
exports.pkg = packageJSON;
exports.init = initDefer.promise;

/*==================================================== Functions  ====================================================*/

function resolveInit(err) {
  if (err == null) {
    initDefer.resolve(exports);
  } else {
    initDefer.reject(err);
  }
}
